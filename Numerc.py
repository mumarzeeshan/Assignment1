#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Oct 14, 2017 12:17:41 AM
import sys
import QuestionType
import Database

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import Numerc_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = MCQ (root)
    Numerc_support.init(root, top)
    root.mainloop()

w = None
def create_MCQ(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = MCQ (w)
    Numerc_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_MCQ():
    global w
    w.destroy()
    w = None


class MCQ:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {Segoe UI Black} -size 11 -weight bold "  \
            "-slant roman -underline 0 -overstrike 0"
        font14 = "-family {Segoe UI Black} -size 18 -weight bold "  \
            "-slant roman -underline 0 -overstrike 0"

        top.geometry("688x525+371+102")
        top.title("MCQ")
        top.configure(background="#333333")



        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.09, rely=0.27, relheight=0.66, relwidth=0.86)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#00ffff")
        self.Frame1.configure(width=595)

        self.QuestionEntry = Entry(self.Frame1)
        self.QuestionEntry.place(relx=0.12, rely=0.17, relheight=0.09
                , relwidth=0.75)
        self.QuestionEntry.configure(background="white")
        self.QuestionEntry.configure(disabledforeground="#a3a3a3")
        self.QuestionEntry.configure(font="TkFixedFont")
        self.QuestionEntry.configure(foreground="#000000")
        self.QuestionEntry.configure(insertbackground="black")
        self.QuestionEntry.configure(width=444)

        self.Label2 = Label(self.Frame1)
        self.Label2.place(relx=0.64, rely=-0.87, height=36, width=101)
        self.Label2.configure(background="#333333")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font=font10)
        self.Label2.configure(foreground="#ffffff")
        self.Label2.configure(text='''Question''')
        self.Label2.configure(width=101)

        self.CorrectEntry = Entry(self.Frame1)
        self.CorrectEntry.place(relx=0.80, rely=0.28, relheight=0.06
                , relwidth=0.07)
        self.CorrectEntry.configure(background="white")
        self.CorrectEntry.configure(disabledforeground="#a3a3a3")
        self.CorrectEntry.configure(font="TkFixedFont")
        self.CorrectEntry.configure(foreground="#000000")
        self.CorrectEntry.configure(insertbackground="black")
        self.CorrectEntry.configure(width=44)

        self.Label3 = Label(self.Frame1)
        self.Label3.place(relx=0.55, rely=0.28, height=26, width=129)
        self.Label3.configure(background="#333333")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font=font10)
        self.Label3.configure(foreground="#ffffff")
        self.Label3.configure(text='''Correct Answer''')
        self.Label3.configure(width=129)



        self.MaxMarks = Entry(self.Frame1)
        self.MaxMarks.place(relx=0.78, rely=0.06, relheight=0.06, relwidth=0.09)
        self.MaxMarks.configure(background="white")
        self.MaxMarks.configure(disabledforeground="#a3a3a3")
        self.MaxMarks.configure(font="TkFixedFont")
        self.MaxMarks.configure(foreground="#000000")
        self.MaxMarks.configure(insertbackground="black")
        self.MaxMarks.configure(width=54)

        self.Label4 = Label(self.Frame1)
        self.Label4.place(relx=0.61, rely=0.06, height=26, width=88)
        self.Label4.configure(background="#333333")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font=font10)
        self.Label4.configure(foreground="#ffffff")
        self.Label4.configure(text='''Max Marks''')
        self.Label4.configure(width=88)





        self.Label = Label(top)
        self.Label.place(relx=0.35, rely=0.1, height=21, width=194)
        self.Label.configure(background="#333333")
        self.Label.configure(disabledforeground="#a3a3a3")
        self.Label.configure(font=font14)
        self.Label.configure(foreground="#ffffff")
        self.Label.configure(text='''Add a Question''')
        self.Label.configure(width=194)

        self.QuizId = Entry(self.Frame1)
        self.QuizId.place(relx=0.51, rely=0.06, relheight=0.06, relwidth=0.09)
        self.QuizId.configure(background="white")
        self.QuizId.configure(disabledforeground="#a3a3a3")
        self.QuizId.configure(font="TkFixedFont")
        self.QuizId.configure(foreground="#000000")
        self.QuizId.configure(insertbackground="black")
        self.QuizId.configure(width=54)

        self.Label5 = Label(self.Frame1)
        self.Label5.place(relx=0.35, rely=0.06, height=26, width=88)
        self.Label5.configure(background="#333333")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(font=font10)
        self.Label5.configure(foreground="#ffffff")
        self.Label5.configure(text='''QuizId''')



        self.BackButton = Button(self.Frame1,command=lambda:back())
        self.BackButton.place(relx=0.05, rely=0.84, height=33, width=68)
        self.BackButton.configure(activebackground="#d9d9d9")
        self.BackButton.configure(activeforeground="#000000")
        self.BackButton.configure(background="#333333")
        self.BackButton.configure(disabledforeground="#a3a3a3")
        self.BackButton.configure(font=font10)
        self.BackButton.configure(foreground="#ffffff")
        self.BackButton.configure(highlightbackground="#d9d9d9")
        self.BackButton.configure(highlightcolor="black")
        self.BackButton.configure(pady="0")
        self.BackButton.configure(text='''Back''')
        self.BackButton.configure(width=68)

        self.SubmitButton = Button(self.Frame1,command= lambda: getDetails(self.MaxMarks.get(),self.QuestionEntry.get(),self.CorrectEntry.get(),self.QuizId.get()))
        self.SubmitButton.place(relx=0.42, rely=0.45, height=33, width=67)
        self.SubmitButton.configure(activebackground="#d9d9d9")
        self.SubmitButton.configure(activeforeground="#ffffff")
        self.SubmitButton.configure(background="#333333")
        self.SubmitButton.configure(disabledforeground="#a3a3a3")
        self.SubmitButton.configure(font=font10)
        self.SubmitButton.configure(foreground="#ffffff")
        self.SubmitButton.configure(highlightbackground="#d9d9d9")
        self.SubmitButton.configure(highlightcolor="black")
        self.SubmitButton.configure(pady="0")
        self.SubmitButton.configure(text='''Submit''')

        def back():
            root.destroy()
            QuestionType.vp_start_gui()

        def getDetails(maxMarks,question,correctAnswer,quizId):
            type = "Numeric"
            print maxMarks,question,correctAnswer,quizId
            Database.c.execute("INSERT INTO Question (QID,Type,Question,Answer,MaxMarks) VALUES(?,?,?,?,?)", (quizId,type,question, correctAnswer, maxMarks))
            Database.conn.commit()

            #Database.conn.close()

            root.destroy()
            QuestionType.vp_start_gui()






if __name__ == '__main__':
    vp_start_gui()



